###############################################################################
# Morphic Configuration
###############################################################################

# =============================================================================
# REQUIRED CONFIGURATION
# These settings are essential for the application to function
# =============================================================================

# -----------------------------------------------------------------------------
# Database Configuration (Required)
# -----------------------------------------------------------------------------
# PostgreSQL connection string (supports Neon, Supabase, or standard PostgreSQL)
# Format: postgresql://[user]:[password]@[host]/[database]?sslmode=require
DATABASE_URL=[YOUR_DATABASE_URL]

# -----------------------------------------------------------------------------
# AI Provider Configuration (At least one required)
# -----------------------------------------------------------------------------
# IMPORTANT: When using non-OpenAI providers, you must update the model 
# configuration in config/models/*.json to use compatible model IDs for your
# chosen provider. See docs/CONFIGURATION.md for provider-specific model IDs.

# Option 1: OpenAI
# Get your API key at: https://platform.openai.com/api-keys
OPENAI_API_KEY=[YOUR_OPENAI_API_KEY]

# Option 2: Anthropic Claude
# Requires updating config/models/*.json with Anthropic model IDs
# ANTHROPIC_API_KEY=[YOUR_ANTHROPIC_API_KEY]

# Option 3: Google Gemini
# Requires updating config/models/*.json with Google model IDs
# GOOGLE_GENERATIVE_AI_API_KEY=[YOUR_GOOGLE_GENERATIVE_AI_API_KEY]

# Option 4: Vercel AI Gateway
# Unified API gateway for multiple providers
# AI_GATEWAY_API_KEY=[YOUR_AI_GATEWAY_API_KEY]

# -----------------------------------------------------------------------------
# Primary Search Provider Configuration (Required - Choose One)
# -----------------------------------------------------------------------------
# Option 1: Tavily Search (Default)
# Get your API key at: https://app.tavily.com/home
TAVILY_API_KEY=[YOUR_TAVILY_API_KEY]

# Option 2: Exa Neural Search (Alternative to Tavily)
# Get your API key at: https://dashboard.exa.ai/
# Note: API key should be without quotes
# EXA_API_KEY=your_api_key_without_quotes

# Option 3: Firecrawl (Alternative web scraping and content extraction)
# Get your API key at: https://www.firecrawl.dev/app
# FIRECRAWL_API_KEY=[YOUR_FIRECRAWL_API_KEY]

# -----------------------------------------------------------------------------
# Additional Search Provider Configuration
# -----------------------------------------------------------------------------
# Brave Search (Required for comprehensive search results)
# Get your API key at: https://brave.com/search/api/
# Note: Can be made optional by commenting out after initial setup
BRAVE_SEARCH_API_KEY=[YOUR_BRAVE_SEARCH_API_KEY]

# -----------------------------------------------------------------------------
# Authentication Configuration (Required)
# -----------------------------------------------------------------------------
# Supabase Authentication
# Get your project URL and anon key from: https://supabase.com/dashboard
# Note: Can be made optional in future releases for anonymous-only usage
NEXT_PUBLIC_SUPABASE_URL=[YOUR_SUPABASE_PROJECT_URL]
NEXT_PUBLIC_SUPABASE_ANON_KEY=[YOUR_SUPABASE_ANON_KEY]

# =============================================================================
# OPTIONAL FEATURES
# Enable additional functionality as needed
# =============================================================================

# -----------------------------------------------------------------------------
# Cloud Deployment Configuration
# -----------------------------------------------------------------------------
# Enable rate limiting and analytics for cloud deployments
# When enabled:
# - Quality mode chat requests are limited to 5 per day
# - Analytics events are tracked to Vercel Analytics (search mode, model type,
#   conversation turns, etc.)
# Requires UPSTASH_REDIS_REST_URL and UPSTASH_REDIS_REST_TOKEN for rate limiting
# MORPHIC_CLOUD_DEPLOYMENT=true

# -----------------------------------------------------------------------------
# File Upload Support (Cloudflare R2)
# Enable file and image upload functionality
# -----------------------------------------------------------------------------
# R2_ACCOUNT_ID=[YOUR_R2_ACCOUNT_ID]
# R2_ACCESS_KEY_ID=[YOUR_R2_ACCESS_KEY_ID]
# R2_SECRET_ACCESS_KEY=[YOUR_R2_SECRET_ACCESS_KEY]
# R2_BUCKET_NAME=user-uploads  # Default: user-uploads
# R2_PUBLIC_URL=[YOUR_R2_PUBLIC_URL]  # e.g., https://pub-xxx.r2.dev

# -----------------------------------------------------------------------------
# Alternative Search Providers
# Configure different search backends
# -----------------------------------------------------------------------------
# Select search provider (default: tavily)
# SEARCH_API=tavily  # Options: tavily, searxng, exa, firecrawl

# SearXNG (Self-hosted)
# SEARXNG_API_URL=http://localhost:8080  # Or docker: http://searxng:8080
# SEARXNG_SECRET=[YOUR_SECRET_KEY]  # Generate: openssl rand -base64 32
# SEARXNG_PORT=8080
# SEARXNG_BIND_ADDRESS=0.0.0.0
# SEARXNG_IMAGE_PROXY=true
# SEARXNG_LIMITER=false
# SEARXNG_DEFAULT_DEPTH=basic  # Options: basic, advanced
# SEARXNG_MAX_RESULTS=50
# SEARXNG_ENGINES=google,bing,duckduckgo,wikipedia
# SEARXNG_TIME_RANGE=None  # Options: day, week, month, year, None
# SEARXNG_SAFESEARCH=0  # 0=off, 1=moderate, 2=strict

# -----------------------------------------------------------------------------
# Content Extraction
# -----------------------------------------------------------------------------
# Default: Tavily Extract API (uses TAVILY_API_KEY configured above)
# 
# Alternative: Jina AI - Enhanced content extraction from web pages
# Provides alternative extraction method with different capabilities
# Get your API key at: https://jina.ai/
# JINA_API_KEY=[YOUR_JINA_API_KEY]

# -----------------------------------------------------------------------------
# Observability & Monitoring
# -----------------------------------------------------------------------------
# Langfuse Tracing
# ENABLE_LANGFUSE_TRACING=true
# LANGFUSE_SECRET_KEY=[YOUR_LANGFUSE_SECRET_KEY]
# LANGFUSE_PUBLIC_KEY=[YOUR_LANGFUSE_PUBLIC_KEY]
# LANGFUSE_BASEURL=https://cloud.langfuse.com  # Or self-hosted URL

# Performance Logging
# ENABLE_PERF_LOGGING=true

# -----------------------------------------------------------------------------
# Advanced Configuration
# -----------------------------------------------------------------------------
# Feedback Notifications (Slack)
# SLACK_WEBHOOK_URL=[YOUR_SLACK_WEBHOOK_URL]
